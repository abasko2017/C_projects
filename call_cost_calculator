#include <iostream> //standard library for i/o
#include <string>
#include <iomanip> //library to use setprecision operator to round-up to hundredth

using namespace std;

int main()
{
	string cell_num;        //introducing the cell_num variable that will store the cell phone number
	int relays;             //introducing the variable that will store the number of relay towers
	int call_length;        //introducing the variable that will store the length of the call
	double tax_rate;        //introducing the variable that will store the tax rate
	double call_tax;        //introducing the variable that will store the call tax
	double net_cost;        //introducing the variable that will store the net cost of the call
	double total_cost;      //introducing the variable that will store the total cost of the call
	string user_response = "y";

	while (user_response == "y" || user_response == "Y") /*starting the loop to let user enter phone number as many times
														 as they would like*/
	{
		cout << "Please enter 10 digit phone number: "; //gathering the phone number during this step
		cin >> cell_num;
		cout << endl;


		cout << endl << "Please enter the number of relay stations: "; //gathering the number of relay stations
		cin >> relays;
		cout << endl;


		cout << endl << "PLease enter the length of the call in minutes: "; //gathering the length of the call in minutes
		cin >> call_length;
		cout << endl;

		//below we determine the effective tax rate based on the number of relay stations using the if conditions
		if (relays >= 0 && relays <= 5)
			tax_rate = 0.01;

		else if (relays >= 6 && relays <= 11)
			tax_rate = 0.03;

		else if (relays >= 12 && relays <= 20)
			tax_rate = 0.05;

		else if (relays >= 21 && relays <= 50)
			tax_rate = 0.08;

		else if (relays > 50)
			tax_rate = 0.12;

		net_cost = (relays / 50.0)*0.40*(call_length); //calculating the net cost of the call
		call_tax = net_cost*tax_rate;                  //calculating the call tax
		total_cost = net_cost + call_tax;              //calculating the total cost of the call

		cout << setprecision(2) << fixed;              //setting precision to 2 will allow us to round-up to the nearest hundredth
													   //printing out the results
		cout << "**************************************************************" << endl;
		cout << "Cell Phone	           " << cell_num << endl;
		cout << "Number of Relay Stations   " << relays << endl;
		cout << "Minutes Used               " << call_length << endl;
		cout << "Net Cost                   " << net_cost << endl;
		cout << "Tax Rate                   " << tax_rate << endl;
		cout << "Call Tax                   " << call_tax << endl;
		cout << "Total Cost of Call         " << total_cost << endl;
		cout << "**************************************************************" << endl << endl;

		cout << "Would you like to do another calculation (Y or N): " << endl;
		cin >> user_response;
		cout << endl;
	}

	return  0;
}
